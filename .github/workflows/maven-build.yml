# This is a basic workflow to help you get started with Actions

name: Maven - Default Build

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for version branches
    push:
        branches: ["version/*", "!version/release/*"]
    pull_request:
        branches: ["version/*", "!version/release/*"]

# Allows to upload to Maven repository with the GITHUB_TOKEN
permissions:
    packages: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            -   name: Git Checkout
                uses: actions/checkout@v5
            -   name: Setup Git user
                run:  |
                      git config --global user.name  "github-actions[bot]"
                      git config --global user.email "github-actions[bot]@users.noreply.github.com"
            -   name: Setup JDK 11
                uses: actions/setup-java@v5
                with:
                    distribution:    'temurin'
                    java-version:    '11'
                    cache:           maven
                    server-id:       project-repo # Value of the distributionManagement/repository/id field of the pom.xml
                    settings-path:   ${{ github.workspace }} # location for the settings.xml file
                    gpg-passphrase:  'gpg_passphrase'
                    gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

            -   name: Build with Maven
                env:
                    GITHUB_TOKEN:             ${{ secrets.GITHUB_TOKEN }}
                    nvd_api_key:              ${{ secrets.NVD_API_KEY }}
                    gpg_key:                  ${{ secrets.GPG_PRIVATE_KEY }}
                    gpg_keyid:                ${{ secrets.GPG_KEYID }}
                    gpg_passphrase:           ${{ secrets.GPG_PASSPHRASE }}
                    mvnsiteuploader_password: ${{ secrets.MVNSITEUPLOADER_PASSWORD }}
                run:  |
                      mvn -B \
                      clean deploy site-deploy \
                      -e \
                      -s ci_settings.xml --file pom.xml \
                      -DfullBuild -Ddistribution -Dexecutable \
                      -P set-general-parent-version
